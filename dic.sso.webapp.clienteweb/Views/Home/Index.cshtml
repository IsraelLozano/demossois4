@using Microsoft.AspNetCore.Authentication

@*@using Microsoft.AspNetCore.Authorization
    @inject IAuthorizationService AuthorizationService*@

@model IEnumerable<CompanyViewModel>

@{
    ViewData["Title"] = "Home Page";
}

@*@if ((await AuthorizationService.AuthorizeAsync(User, "CanCreateAndModifyData")).Succeeded)
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }*@

<p>
    <a asp-action="Create">Create New</a>
</p>

@*@if (User.IsInRole("Admin"))
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }*@


<div>
    <strong>id_token</strong>
    <span>@await ViewContext.HttpContext.GetTokenAsync("id_token")</span>
</div>

<div>
    <strong>access_token</strong>
    <span>@await ViewContext.HttpContext.GetTokenAsync("access_token")</span>
</div>

<div>
    <strong>refresh_token</strong>
    <span>@await ViewContext.HttpContext.GetTokenAsync("refresh_token")</span>
</div>


@foreach (var claim in User.Claims)
{
    <div>
        <strong>@claim.Type: </strong>
        <span>@claim.Value</span>
    </div>
}



<table class="table table-responsive table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FullAddress)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FullAddress)
                </td>
                @*@if (User.IsInRole("Admin"))
                    {
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                        </td>
                    }*@

                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>

                @*@if ((await AuthorizationService.AuthorizeAsync(User, "CanCreateAndModifyData")).Succeeded)
                    {
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                        </td>
                    }*@
            </tr>
        }
    </tbody>
</table>
